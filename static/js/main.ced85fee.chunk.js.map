{"version":3,"sources":["components/TodoList/TodoList.jsx","components/app.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","state","titleFilter","sortTodos","titleChange","event","setState","target","value","todosSort","this","props","todos","hendleSelectUser","filtred","filter","todo","title","includes","completed","className","type","onChange","placeholder","map","readOnly","onClick","userId","React","Component","request","endPoint","fetch","then","response","json","result","data","getUser","CurrentUser","user","newUser","prevProps","clearUser","id","name","email","phone","App","selectedUserId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ced85fee.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\n\nexport class TodoList extends React.Component {\n  state = {\n    titleFilter: '',\n    sortTodos: 'all',\n  }\n\n  titleChange = (event) => {\n    this.setState({ titleFilter: event.target.value });\n  }\n\n  todosSort = (event) => {\n    this.setState({ sortTodos: event.target.value });\n  }\n\n  render() {\n    const { todos, hendleSelectUser } = this.props;\n    const filtred = todos.filter(todo => todo.title && todo\n      .title.includes(this.state.titleFilter))\n      .filter((todo) => {\n        switch (this.state.sortTodos) {\n          case 'active':\n            return todo.completed === false;\n          case 'completed':\n            return todo.completed === true;\n          default:\n            return todo;\n        }\n      });\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n        <input type=\"text\" onChange={this.titleChange} placeholder=\"search\" />\n        <select value={this.state.sortTodos} onChange={this.todosSort}>\n          <option value=\"all\">all</option>\n          <option value=\"active\">active</option>\n          <option value=\"completed\">completed</option>\n        </select>\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {filtred.map(todo => (\n              <li className=\"TodoList__item TodoList__item--unchecked\">\n                <label>\n                  <input type=\"checkbox\" readOnly />\n                  <p>{todo.title}</p>\n                </label>\n                <button\n                  className=\"\n                          TodoList__user-button\n                          TodoList__user-button--selected\n                          button\n                        \"\n                  type=\"button\"\n                  onClick={() => hendleSelectUser(todo.userId)}\n                >\n                  User&nbsp;#\n                  {todo.userId}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  hendleSelectUser: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      userId: PropTypes.number.isRequired,\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const API_URL = 'https://mate-api.herokuapp.com';\n\nconst request = endPoint => (\n  fetch(`${API_URL}${endPoint}`)\n    .then(response => response.json())\n    .then(result => result.data)\n);\n\nexport const getTodos = () => request('/todos');\nexport const getUsers = () => request('/users');\nexport const getUser = userId => request(`/users/${userId}`);\n","import React from 'react';\nimport './CurrentUser.scss';\nimport PropTypes from 'prop-types';\nimport { getUser } from '../app';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: null,\n  }\n\n  componentDidMount() {\n    this.newUser();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      this.newUser();\n    }\n  }\n\n  newUser = () => {\n    getUser(this.props.userId)\n      .then((user) => {\n        this.setState({ user });\n      });\n  }\n\n  render() {\n    const { user } = this.state;\n    const { clearUser } = this.props;\n\n    return (\n      <div className=\"CurrentUser\">\n        {user ? (\n          <>\n            <h2 className=\"CurrentUser__title\">\n              <span>{`Selected user: ${user.id}`}</span>\n            </h2>\n            <h3 className=\"CurrentUser__name\">{user.name}</h3>\n            <p className=\"CurrentUser__email\">{user.email}</p>\n            <p className=\"CurrentUser__phone\">{user.phone}</p>\n\n            <button\n              type=\"button\"\n              onClick={() => clearUser()}\n            >\n              Clear selected user\n            </button>\n          </>\n        ) : (\n          <>\n            w8 a minute\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './components/app';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then((todos) => {\n        this.setState({ todos });\n      });\n  }\n\n  hendleSelectUser = (userId) => {\n    this.setState({ selectedUserId: userId });\n  }\n\n  clearUser = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            hendleSelectUser={this.hendleSelectUser}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                clearUser={this.clearUser}\n                userId={selectedUserId}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}